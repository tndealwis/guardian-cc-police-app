doctype html
html(lang="en")
  head
    title Dashboard
    link(href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.7/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-LN+7fdVzj6u52u30Kp6M/trliBMCMKTyK833zpbD+pXdCLuTusPj697FH4R/5mcr" crossorigin="anonymous")
    link(href="https://api.mapbox.com/mapbox-gl-js/v3.3.0/mapbox-gl.css" rel="stylesheet" crossorigin="anonymous")
    script(src="https://api.mapbox.com/mapbox-gl-js/v3.3.0/mapbox-gl.js" crossorigin="anonymous")
    style.
      body {
        background: #212529;
      }
      
      #map {
        width: 100%;
        height: 400px;
        margin-top: 20px;
        border-radius: 8px;
      }
      
      .loading {
        display: flex;
        align-items: center;
        justify-content: center;
        height: 400px;
        background-color: #343a40;
        border-radius: 8px;
        margin-top: 20px;
        color: white;
      }
      
      .btn-gap {
        margin-right: 1rem;
      }

  body.container-sm.p-5.text-white
    h1.mb-4 Welcome, #{username}
    
    .alert.alert-danger.mb-4 
      | If you are in immediate danger call 000
    
    .mb-4
      a(href="/report").btn.btn-primary.btn-gap New Report
      button.btn.btn-primary New Lost Article
    
    #loading.loading
      .text-center
        .spinner-border.text-light.mb-3(role="status")
          span.visually-hidden Loading...
        div Getting your location...
    
    #map(style="display: none;")

    #userReports.d-flex.flex-column.gap-4.my-4
      h3 Reports
      each val in reports
        div.row.align-items-center.mb-3.border-bottom.p-4
          div.col-6
            p.mb-0= val.description
          div.col-3.badge.rounded-pill.text-bg-warning
            p.mb-0= val.status
          div.col-3.text-end
            a(href="/view-report/" + val.id).btn.btn-primary view
    
    script.
      let userLocation = null;
      let map = null;
      
      mapboxgl.accessToken = '!{mapboxToken}';
      
      function initializeMap(coords) {
        document.getElementById('loading').style.display = 'none';
        document.getElementById('map').style.display = 'block';
        
        // Create map
        map = new mapboxgl.Map({
          container: 'map',
          style: 'mapbox://styles/mapbox/streets-v12',
          center: coords,
          zoom: 16,
          crossOrigin: 'anonymous'
        });
        
        map.addControl(new mapboxgl.NavigationControl());
        
        const marker = new mapboxgl.Marker({ draggable: true })
          .setLngLat(coords)
          .addTo(map);
          
        marker.on('dragend', () => {
          const lngLat = marker.getLngLat();
          console.log(`Marker moved to: ${lngLat.lng}, ${lngLat.lat}`);
          userLocation = [lngLat.lng, lngLat.lat];
        });
      }
      
      function handleLocationSuccess(pos) {
        const coords = [pos.coords.longitude, pos.coords.latitude];
        userLocation = coords;
        console.log('Location retrieved once:', coords);
        initializeMap(coords);
      }
      
      function handleLocationError(error) {
        console.error('Location error:', error);
        document.getElementById('loading').innerHTML = 
          '<div class="text-center text-light"><div class="mb-3">Could not get location</div><div class="text-muted">Using default location</div></div>';
        
        const defaultCoords = [151.2093, -33.8688];
        userLocation = defaultCoords;
        setTimeout(() => initializeMap(defaultCoords), 2000);
      }
      
      const options = {
        enableHighAccuracy: true,
        maximumAge: 0,
        timeout: 10000,
      };
      
      navigator.geolocation.getCurrentPosition(
        handleLocationSuccess, 
        handleLocationError, 
        options
      );
      
      function getStoredLocation() {
        return userLocation;
      }
